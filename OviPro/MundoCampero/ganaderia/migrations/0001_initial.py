# Generated by Django 4.2.17 on 2025-01-12 00:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('RUT', models.IntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.MinValueValidator(1000000), django.core.validators.MaxValueValidator(999999999999)])),
                ('telefono', models.IntegerField(null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('registro_ARU_criador', models.IntegerField(blank=True, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CalificadorPureza',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Oveja',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('BU', models.CharField(max_length=50, unique=True)),
                ('RP', models.CharField(max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=100, null=True, unique=True)),
                ('peso', models.FloatField()),
                ('edad', models.PositiveIntegerField()),
                ('fecha_nacimiento', models.DateField()),
                ('sexo', models.CharField(choices=[('Macho', 'Macho'), ('Hembra', 'Hembra')], max_length=10)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('activa', 'Activa'), ('vendida', 'Vendida'), ('muerta', 'Muerta')], default='activa', max_length=10)),
                ('rp_padre_externo', models.CharField(blank=True, max_length=50, null=True)),
                ('rp_madre_externo', models.CharField(blank=True, max_length=50, null=True)),
                ('valor_venta_ind', models.FloatField(blank=True, null=True)),
                ('fecha_muerte', models.DateTimeField(auto_now_add=True)),
                ('calificador_pureza', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ganaderia.calificadorpureza')),
                ('establecimiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ovejas', to=settings.AUTH_USER_MODEL)),
                ('oveja_madre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hijos_madre', to='ganaderia.oveja')),
                ('oveja_padre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hijos_padre', to='ganaderia.oveja')),
            ],
        ),
        migrations.CreateModel(
            name='Raza',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_venta', models.DateField()),
                ('peso_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('valor_carne', models.FloatField(blank=True, null=True)),
                ('valor', models.FloatField(default=0.0)),
                ('tipo_venta', models.CharField(choices=[('remate', 'Remate'), ('individual', 'Individual'), ('frigorifico', 'Frigorífico'), ('donacion', 'Donación')], max_length=20)),
                ('establecimiento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ventas', to=settings.AUTH_USER_MODEL)),
                ('ovejas', models.ManyToManyField(blank=True, related_name='ventas', to='ganaderia.oveja')),
            ],
        ),
        migrations.AddField(
            model_name='oveja',
            name='raza',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ganaderia.raza'),
        ),
    ]
